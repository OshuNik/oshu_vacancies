<!-- favorites.js (JavaScript-–∫–æ–¥) -->
// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API –¢–µ–ª–µ–≥—Ä–∞–º–∞
const tg = window.Telegram.WebApp;
tg.expand();

// –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∑–¥–µ—Å—å –≤–∞—à–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ URL-–∞–¥—Ä–µ—Å–∞
const GET_FAVORITES_API_URL = 'https://oshunik.ru/webhook/9dcaefca-5f63-4668-9364-965c4ace49d2';
const UPDATE_API_URL = 'https://oshunik.ru/webhook/cf41ba34-60ed-4f3d-8d13-ec85de6297e2';

// –ò–°–ü–†–ê–í–õ–ï–ù–û: –¢–µ–ø–µ—Ä—å —Å–∫—Ä–∏–ø—Ç –∏—â–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
const container = document.getElementById('favorites-list');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ (—É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ)
async function updateStatus(vacancyId, newStatus) {
    const cardElement = document.getElementById(`card-${vacancyId}`);
    const button = event.target;
    button.disabled = true; // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥–≤–æ–π–Ω—ã—Ö –Ω–∞–∂–∞—Ç–∏–π

    try {
        await fetch(UPDATE_API_URL, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: vacancyId, newStatus: newStatus })
        });
        // –ü–ª–∞–≤–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ —Å–ø–∏—Å–∫–∞
        cardElement.style.transition = 'opacity 0.3s ease';
        cardElement.style.opacity = '0';
        setTimeout(() => cardElement.remove(), 300);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
        tg.showAlert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å.');
        button.disabled = false; // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π
async function loadVacancies() {
    if (!container) {
        console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–∞–∫–∞–Ω—Å–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    container.innerHTML = '<p>üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...</p>';
    try {
        const response = await fetch(GET_FAVORITES_API_URL + '?cache_buster=' + new Date().getTime());
        const text = await response.text();
        if (!text) {
            container.innerHTML = '<p>–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø—É—Å—Ç–æ</p>';
            return;
        }
        
        let items = JSON.parse(text);
        
        container.innerHTML = '';
        if (items && !Array.isArray(items)) { items = [items]; }
        if (!items || items.length === 0) {
            container.innerHTML = '<p>–í –∏–∑–±—Ä–∞–Ω–Ω–æ–º –ø—É—Å—Ç–æ</p>';
            return;
        }

        for (const item of items) {
            const vacancy = item.json ? item.json : item;
            if (!vacancy.id) continue;
            
            const card = document.createElement('div');
            card.className = 'vacancy-card';
            card.id = `card-${vacancy.id}`;
            
            // –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å—é —à–∏—Ä–∏–Ω—É
            card.innerHTML = `
                <h3>${vacancy.category || '‚ö†Ô∏è –í–∞–∫–∞–Ω—Å–∏—è –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}</h3>
                <p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${vacancy.reason || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
                <p><strong>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</strong> ${vacancy.keywords_found || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
                <p><strong>–ö–∞–Ω–∞–ª:</strong> ${vacancy.channel || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
                <hr>
                <details>
                    <summary>–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç</summary>
                    <p>${vacancy.text_highlighted || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
                </details>
                <div class="card-buttons" style="grid-template-columns: 1fr;">
                    <button class="button button-danger" onclick="updateStatus('${vacancy.id}', 'deleted')">‚ùå –£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ</button>
                </div>
            `;
            container.appendChild(card);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ:', error);
        container.innerHTML = `<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: ${error.message}</p>`;
    }
}

// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
loadVacancies();
