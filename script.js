// script.js

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API –¢–µ–ª–µ–≥—Ä–∞–º–∞
const tg = window.Telegram.WebApp;
tg.expand();

const GET_API_URL    = 'https://oshunik.ru/webhook/3807c00b-ec11-402e-b054-ba0b3faad50b';
const UPDATE_API_URL = 'https://oshunik.ru/webhook/cf41ba34-60ed-4f3d-8d13-ec85de6297e2';

const container  = document.getElementById('vacancies-list');
const refreshBtn = document.getElementById('refresh-button');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
async function updateStatus(vacancyId, newStatus) {
  const cardElement = document.getElementById(`card-${vacancyId}`);
  const button      = event.target;
  button.classList.add('button-loading');

  try {
    const res = await fetch(UPDATE_API_URL, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id: vacancyId, newStatus })
    });
    console.log('Update status ‚Üí', res.status, res.statusText);
    cardElement.style.transition = 'opacity 0.3s ease';
    cardElement.style.opacity    = '0';
    setTimeout(() => cardElement.remove(), 300);
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', err);
    tg.showAlert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å.');
    button.classList.remove('button-loading');
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π
async function loadVacancies() {
  container.innerHTML        = '<p>üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...</p>';
  refreshBtn.classList.add('button-loading');

  try {
    // 1) –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å
    const response = await fetch(`${GET_API_URL}?cache_buster=${Date.now()}`);
    console.log('Fetch to', GET_API_URL, '‚Üí', response.status, response.statusText);

    // 2) –ß–∏—Ç–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –∏ –ª–æ–≥–∏—Ä—É–µ–º
    const text = await response.text();
    console.log('Fetch response text:', text);

    // 3) –ü–∞—Ä—Å–∏–º JSON
    let items;
    try {
      items = text ? JSON.parse(text) : [];
    } catch (e) {
      console.error('Error parsing JSON:', e);
      container.innerHTML = '<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞</p>';
      return;
    }
    console.log('Parsed items:', items);

    // 4) –û–±–Ω—É–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container.innerHTML = '';

    // 5) –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è: –µ—Å–ª–∏ –ø—Ä–∏—à—ë–ª –æ–¥–∏–Ω–æ—á–Ω—ã–π –æ–±—ä–µ–∫—Ç, –¥–µ–ª–∞–µ–º –º–∞—Å—Å–∏–≤
    if (items && !Array.isArray(items)) {
      items = [items];
    }
    if (!items || items.length === 0) {
      container.innerHTML = '<p>–ù–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –Ω–µ—Ç</p>';
      return;
    }

    // 6) –†–µ–Ω–¥–µ—Ä–∏–º –∫–∞—Ä—Ç–æ—á–∫–∏
    for (const item of items) {
      const vacancy = item.json ? item.json : item;
      if (!vacancy.id) continue;

      const card = document.createElement('div');
      card.className = 'vacancy-card';
      card.id        = `card-${vacancy.id}`;

      card.innerHTML = `
        <h3>${vacancy.category || '‚ö†Ô∏è –ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}</h3>
        <p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${vacancy.reason || '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
        <p><strong>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</strong> ${vacancy.keywords_found || '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
        <p><strong>–ö–∞–Ω–∞–ª:</strong> ${vacancy.channel || '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
        <hr>
        <details>
          <summary>–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç</summary>
          <p>${vacancy.text_highlighted_sheet || '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
        </details>
        <div class="card-buttons">
          <button class="favorite-button" onclick="updateStatus('${vacancy.id}', 'favorite')">‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</button>
          <button class="delete-button"   onclick="updateStatus('${vacancy.id}', 'deleted')">‚ùå –£–¥–∞–ª–∏—Ç—å</button>
        </div>
      `;
      container.appendChild(card);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ loadVacancies:', error);
    container.innerHTML = `<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: ${error.message}</p>`;
  } finally {
    refreshBtn.classList.remove('button-loading');
  }
}

// –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É ¬´–û–±–Ω–æ–≤–∏—Ç—å¬ª –∫ loadVacancies –∏ –≤—ã–∑—ã–≤–∞–µ–º –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
refreshBtn.addEventListener('click', loadVacancies);
loadVacancies();
