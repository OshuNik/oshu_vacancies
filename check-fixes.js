#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ fix –∫–æ–º–º–∏—Ç–æ–≤
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å Cursor –∏ MCP GitHub –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
 */

const fs = require('fs');
const { execSync } = require('child_process');

// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç
function getLastCommit() {
    try {
        const commitMsg = execSync('git log -1 --pretty=format:"%s"', { encoding: 'utf8' });
        const commitHash = execSync('git log -1 --pretty=format:"%h"', { encoding: 'utf8' });
        const commitFiles = execSync('git diff-tree --no-commit-id --name-only -r HEAD', { encoding: 'utf8' }).split('\n').filter(f => f);
        
        return { msg: commitMsg, hash: commitHash, files: commitFiles };
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–º–º–∏—Ç–∞:', error.message);
        return null;
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–æ–º–º–∏—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –±–∞–≥–∞
function isFixCommit(commitMsg) {
    const fixKeywords = ['fix:', 'Fix:', '–∏—Å–ø—Ä–∞–≤–ª', '–±–∞–≥', 'bug', 'üîß', '–ø–æ—á–∏–Ω–∏–ª', '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'];
    return fixKeywords.some(keyword => commitMsg.toLowerCase().includes(keyword.toLowerCase()));
}

// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
function analyzeChangedFiles(files) {
    const categories = {
        js: files.filter(f => f.endsWith('.js')),
        html: files.filter(f => f.endsWith('.html')),
        css: files.filter(f => f.endsWith('.css'))
    };
    
    return categories;
}

// –°–æ–∑–¥–∞—ë–º –æ—Ç—á—ë—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
function generateCheckReport(commit, fileCategories) {
    const report = `
üîç –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ô –ê–ù–ê–õ–ò–ó FIX –ö–û–ú–ú–ò–¢–ê
==========================================

üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–º–∏—Ç–µ:
‚Ä¢ Hash: ${commit.hash}
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–µ: "${commit.msg}"

üìÅ –ò–∑–º–µ–Ω—ë–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:
${commit.files.map(f => `‚Ä¢ ${f}`).join('\n')}

üéØ –¢–†–ï–ë–£–ï–¢–°–Ø –ü–†–û–í–ï–†–ö–ê:

${fileCategories.js.length > 0 ? `
üü° JavaScript —Ñ–∞–π–ª—ã (${fileCategories.js.length}):
${fileCategories.js.map(f => `   ‚Ä¢ ${f} - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É –∏ —Å–æ–±—ã—Ç–∏—è`).join('\n')}
` : ''}

${fileCategories.html.length > 0 ? `
üü¢ HTML —Ñ–∞–π–ª—ã (${fileCategories.html.length}):
${fileCategories.html.map(f => `   ‚Ä¢ ${f} - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤`).join('\n')}
` : ''}

${fileCategories.css.length > 0 ? `
üîµ CSS —Ñ–∞–π–ª—ã (${fileCategories.css.length}):
${fileCategories.css.map(f => `   ‚Ä¢ ${f} - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∏–ª–∏ –∏ –∞–Ω–∏–º–∞—Ü–∏–∏`).join('\n')}
` : ''}

üí¨ –°–∫–∞–∂–∏—Ç–µ –º–Ω–µ –≤ Cursor:
"–ü—Ä–æ–≤–µ—Ä—å –∏—Å–ø—Ä–∞–≤–∏–ª—Å—è –ª–∏ –±–∞–≥ –ø–æ—Å–ª–µ –∫–æ–º–º–∏—Ç–∞ ${commit.hash}"

–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ: "–¢–µ—Å—Ç –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ fix –∫–æ–º–º–∏—Ç–∞"
==========================================
`;

    return report;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–æ–º–º–∏—Ç–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...\n');
    
    const commit = getLastCommit();
    if (!commit) {
        console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–º–∏—Ç–µ');
        return;
    }
    
    if (!isFixCommit(commit.msg)) {
        console.log('‚ÑπÔ∏è –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –±–∞–≥–∞');
        console.log(`–ö–æ–º–º–∏—Ç: "${commit.msg}"`);
        return;
    }
    
    console.log('üîß –û–ë–ù–ê–†–£–ñ–ï–ù FIX –ö–û–ú–ú–ò–¢!');
    
    const fileCategories = analyzeChangedFiles(commit.files);
    const report = generateCheckReport(commit, fileCategories);
    
    console.log(report);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á—ë—Ç –≤ —Ñ–∞–π–ª –¥–ª—è Cursor
    fs.writeFileSync('last-fix-check.md', report);
    console.log('üìÑ –û—Ç—á—ë—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ last-fix-check.md\n');
    
    console.log('üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ Cursor –æ—Ç–∫—Ä–æ–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –∏ —Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è!');
}

if (require.main === module) {
    main();
}
