// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API –¢–µ–ª–µ–≥—Ä–∞–º–∞
const tg = window.Telegram.WebApp;
tg.expand();

// !!! URL –¥–ª—è –ü–û–õ–£–ß–ï–ù–ò–Ø —Å–ø–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π
const GET_API_URL = '–°–Æ–î–ê_–í–°–¢–ê–í–¨–¢–ï_–í–ê–®_API_URL_–î–õ–Ø_–ü–û–õ–£–ß–ï–ù–ò–Ø_–î–ê–ù–ù–´–•';

// !!! URL –¥–ª—è –û–ë–ù–û–í–õ–ï–ù–ò–Ø —Å—Ç–∞—Ç—É—Å–∞ –≤–∞–∫–∞–Ω—Å–∏–∏
const UPDATE_API_URL = '–°–Æ–î–ê_–í–°–¢–ê–í–¨–¢–ï_URL_–ò–ó_–í–û–†–ö–§–õ–û–£_–î–õ–Ø_–û–ë–ù–û–í–õ–ï–ù–ò–Ø';

const container = document.getElementById('vacancies-list');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
async function updateStatus(vacancyId, newStatus) {
    const cardElement = document.getElementById(`card-${vacancyId}`);
    try {
        await fetch(UPDATE_API_URL, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: vacancyId, newStatus: newStatus })
        });
        // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω, –ø–ª–∞–≤–Ω–æ —É–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Å —ç–∫—Ä–∞–Ω–∞
        cardElement.style.transition = 'opacity 0.3s ease';
        cardElement.style.opacity = '0';
        setTimeout(() => cardElement.remove(), 300);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', error);
        tg.showAlert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å.');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π
async function loadVacancies() {
    container.innerHTML = '<p>üîÑ –ó–∞–≥—Ä—É–∑–∫–∞...</p>'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–≥—Ä—É–∑–∫–∏
    try {
        const response = await fetch(GET_API_URL + '?cache_buster=' + new Date().getTime());
        let items = await response.json();
        container.innerHTML = '';
        if (items && !Array.isArray(items)) { items = [items]; }
        if (!items || items.length === 0) {
            container.innerHTML = '<p>–ù–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.</p>';
            return;
        }
        for (const item of items) {
            const vacancy = item.json ? item.json : item;
            if (!vacancy.id) continue;
            
            const card = document.createElement('div');
            card.className = 'vacancy-card';
            card.id = `card-${vacancy.id}`;
            
            card.innerHTML = `
                <h3>${vacancy.category || '‚ö†Ô∏è –í–∞–∫–∞–Ω—Å–∏—è –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}</h3>
                <p><strong>–ü—Ä–∏—á–∏–Ω–∞:</strong> ${vacancy.reason || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
                <p><strong>–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞:</strong> ${vacancy.keywords_found || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
                <p><strong>–ö–∞–Ω–∞–ª:</strong> ${vacancy.channel || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
                <hr>
                <details>
                    <summary>–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç</summary>
                    <p>${vacancy.text_highlighted || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
                </details>
                <div class="card-buttons">
                    <button class="favorite-button" onclick="updateStatus('${vacancy.id}', 'favorite')">‚≠ê –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</button>
                    <button class="delete-button" onclick="updateStatus('${vacancy.id}', 'deleted')">‚ùå –£–¥–∞–ª–∏—Ç—å</button>
                </div>
            `;
            container.appendChild(card);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ —Å–∫—Ä–∏–ø—Ç–µ:', error);
        container.innerHTML = `<p>–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: ${error.message}</p>`;
    }
}

// --- –ö–æ–¥ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å" ---
// –ù–∞—Ö–æ–¥–∏–º –∫–Ω–æ–ø–∫—É –ø–æ –µ—ë id
const refreshBtn = document.getElementById('refresh-button');
// –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É - –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞–∫–∞–Ω—Å–∏–π
refreshBtn.addEventListener('click', loadVacancies);

// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
loadVacancies();
